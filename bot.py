import os
import logging
from flask import Flask, request
import telebot

# -------------------------
# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
# -------------------------
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(message)s"
)

# -------------------------
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
# -------------------------
TOKEN = os.environ.get("TELEGRAM_TOKEN")
APP_URL = os.environ.get("WEBHOOK_URL")  # https://telegram-growth-bot-lrkb.onrender.com

if not TOKEN or not APP_URL:
    raise ValueError("‚ùå –£–∫–∞–∂–∏ TELEGRAM_TOKEN –∏ WEBHOOK_URL –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

bot = telebot.TeleBot(TOKEN, threaded=False)
app = Flask(__name__)

# -------------------------
# –•—ç–Ω–¥–ª–µ—Ä—ã –±–æ—Ç–∞
# -------------------------
@bot.message_handler(commands=["start"])
def start_handler(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç üëã –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Render!")

@bot.message_handler(commands=["help"])
def help_handler(message):
    bot.reply_to(message, "–Ø –ø—Ä–æ—Å—Ç–æ–π –±–æ—Ç. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /start, /help")

@bot.message_handler(func=lambda m: True)
def echo_handler(message):
    bot.reply_to(message, f"–¢—ã –Ω–∞–ø–∏—Å–∞–ª: {message.text}")

# -------------------------
# Flask —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
# -------------------------
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    json_str = request.get_data().decode("utf-8")
    logging.info(f"üì© Update received: {json_str}")
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "ok", 200

@app.route("/", methods=["GET"])
def index():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!", 200

@app.route("/healthz", methods=["GET"])
def health():
    return "ok", 200

# -------------------------
# –ó–∞–ø—É—Å–∫
# -------------------------
if __name__ == "__main__":
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫ (–æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ–≥–¥–∞)
    bot.remove_webhook()
    success = bot.set_webhook(url=f"{APP_URL}/{TOKEN}")
    if success:
        logging.info(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {APP_URL}/{TOKEN}")
    else:
        logging.error("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±—Ö—É–∫–∞")

    port = int(os.environ.get("PORT", 10000))
    logging.info(f"üöÄ Flask —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    app.run(host="0.0.0.0", port=port)
